File menu
New (new text tab)
Open (Opens dos text same as unix)
Save (can save to c, etc or in a different encoding)
Save As (change name, encoding or both)
Save All (saves all open tabs)
Print Preview
Print (Quicker version of the above)
Close File


Edit Menu
Undo 
Redo
Undo History (last 20 changes by default (words))
seperator
Cut
Copy 
Paste
Clipboard
separator
Find & Replace

Insert Menu
Special Character
Date/Time
separator
Spellcheck
Sort
Manage Fields

Options Menu
Change Font
Set Tab Width
Line Numbers
separator
UPPER CASE
lower case
Title Case
separator
Highlighting

Large Icons
Spellcheck
Sort
Find
Save All

Tool box (view)
Text font, size

Zoom in, out
Zoom slider
(editing)
Undo, redo

ins. char, upper, lower, title case
syntax highlighting combo list.


Word count, line no. in status bar (line number first)

-------------------------------------------------------------------

Open function
Default open dialog

Save function
  Input: file type, encoding, same name as uploaded file.
  Output: A saved, then downloaded file.
Advanced setting with different file ending options for programming languages, and different encoding options like utf-8 or ASCII.
Normal view displays the default file ending, txt.
Quick menu with close button.

Save As function
  Input: New file name, file type, file encoding.
  Output: A saved, then downloaded file.
Normal view changes name, shows default file ending. Advanced button adds encoding and file ending options the same layout as with save.

Save All function
Calls save on each open tab from left to right (the tabs are in an array).

Print View function
  Input: Current file tab selected
  Output: Print view dialog with file.
View the file in a (new browser tab) as it will be printed. Zoom in, zoom out, zoom orig and zoom slider. Print button.

Quick Print
  Input: Button press.
  Output: Print dialog of client OS with current file tab as printed file.
Prints out the file from a print view tab which prints, asks for confirmation (depends on os), then closes the print view browser tab.

Close File
  Input: Currently active tab
  Output: Closes that tab (removes filex from div's in file_port)
Closes the currently active tab, if it's the only tab also creates a new tab so there is somewhere to type.

++++++++++++++++++++++++++++

Undo function
  Input: Current file tab
  Output: Undos most recent document (word) change
Takes away the last word typed. A word is a string of characters surrounded by whitespace.

Redo function
  Input: Current file tab
  Output: Repeats the last document (word) change
Retypes the last word or puts something back if undo has been used. 

Undo History function
  Input: Document changes data structure
  Output: List of last 20 document (word) changes, with options to show earlier changes.
Shows all changes made to the document in 20 word chunks. 

Cut function
Not needed - does this via contenteditable. Make sure it's IE 9 compatible.

Copy function
See cut

Paste function
  Input: Any text or html from the other tabs or other open websites/text sources from programs
  Output: Text only, all HTML stripped. < and > changed to correct entities.
the file_port strips html tags using a Django filter in a view/template.

Clipboard function
  Input: All file tabs document changes, truncated to 20 cuts or copies.
  Output: List of text, with document name and first few words. Pop-up tooltip for whole text. Radio button to paste things back into document.
Shows the copied items through the undo/redo document changes python function. Displays chunks of text with an ellipis (first 5 words). Up to 20 items to choose from in a checkbox quick menu list with show/hide button. 

Find & Replace function
  Input: Find string, replace string. Case sensitive option (default true)
  Output: Searches through whole of the current tab, or searches and replaces. Adds CSS spans to the results. Returns number of replacements made if replace all is pressed.
A small quick menu (show/hide button). Find is on the left, which looks through the current tab for the word entered. Replace is on the right with a similar box and a replace all button. The replace button replaces one (bright green background) found word at a time and changes the highlight to lemon yellow. A case sensitive checkbox is provided.

+++++++++++++++++++++++++++++++

Special Character function
  Input: A character selection, from the grid of glyphs.
  Output: Appends the character after the cursor, using update_doc file_port function.
Opens a (new browser tab) dialog with the current fonts glyphs displayed in framed groups for currency, foreign languages and geometry markings. Includes a search box for things like 'a umlauts', 'reversed a', 'euro', 'yen' which selects the correct glyph (encoded in unicode \&504). The selected glyph is displayed in a larger box, and the current word is also displayed on the left of that, with larger text.
The glyph is shown large with the text like that to determine different letter markings.

Date/Time function
  Input: The date/time and client's timezone
  Output: The date or time
Inserts the current date. A separate menu entry inserts just the time in 24 hour format without timezone.

Spellcheck function
  Input: All of the current file tab 
  Output: Underlines wrong words that aren't in the dictionary. Adds similiar words to help box.
Checks the current tab for spelling errors using the dictionary and language specified in the overall Paradise Office settings. When it spots a non captialised word it doesn't recognise, it red underlines the word and adds a help message with 3 other suggested words.  

Sort (goes in options menu) function
  Input: Text selection or current file.
  Output: Ascending or descending lines, or on the first column
Works on either a text selection, where it sorts on the lines, or on the whole current document. Opens a quick menu with a selection or whole document option (or columns if working on a csv file). Sorts either ascending or descending 0-10 a-z. Case insensitive. Show/hide button.

Manage csv fields function
  Input: CSV file, or sql file (current file).
  Output: Cut out or rearrage columns
Can either cut a field, or rearrange columns. Selects the character to split columns on, say '::'. Also works for .sql file endings, and on just selections. The whole current document is the default input. New tab dialog with file preview. Pressing OK closes the tab.

++++++++++++++++++++++++++++++

Change Font function
  Input: file port css. A font size and face.
  Output: Changes all open files font 
Changes the font in all of the open tabs. Only several easy to read fonts are included - up to 10. Grouped by monospace and sans-serif. Quick menu, includes a preview of text and the font size and an accessible font button.

Set Tab Width
  Input: Number of spaces
  Output: All new tabs are that number of spaces wide.
Default is 4 spaces. Quick menu with show/hide button. No tabs option. Adds 4 non-breaking spaces character entities.

Line Numbers
  Input: Current file
  Output: Line numbers to the left, like 1. (grey text).
Turns line numbers on in the current file.

Upper Case function
  Input: selected string
  Output: Upper case string 
Sets the selected string to upper case using Django filters.

lower case function
  Input: selected string
  Output: Lower case string
Sets the selected string to lower case using Django filters or Python .lower().

Title Case function
  Input-output: Similiar to the above.
Sets the selected string's First Letter of each word to a capital letter. Splits the words on whitespace. Python function.

Highlighting
  Input: Current file tab.
  Output: Different colours for different words according to the syntax. Depending on the option chosen.
Opens a new tab dialog which closes on pressing 'OK' or Cancel. Displays the first 2 lines as a file preview at the bottom. Has groups of syntax highlighting on the left such as 'Human languages', 'Web Design', 'Traditional Programming', 'New Programming', 'Graphics', 'Maths'. 
In human languages is grammar highlighting, for viewing preprositions, adjectives and so forth in different colours or jargon highlighting for singling out words like HTML or abbreviations, acronyms etc.
Web design: HTML, XML, RSS, CSS, Javascript, Django, PHP, ASP, Perl.
Trad programming: C , C++, Lisp, BASH, Java, Powershell, DOS, Assembler, c#, etc.
New Programming: Python, Go, Javascript, Markdown, Actionscript
Graphics: SVG
Maths: MathML



